{"ast":null,"code":"import { apiConfig } from \"./constants\";\n\nclass Api {\n  constructor({\n    baseUrl,\n    token,\n    groupId\n  }) {\n    this._url = baseUrl;\n    this._token = token;\n    this._groupId = groupId;\n  }\n\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkRes);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkRes);\n  }\n\n  setUserInfo(user) {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about\n      })\n    }).then(this._checkRes);\n  }\n\n  addCard(card) {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(this._checkRes);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/${this._groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkRes);\n  }\n\n  toogleLike(cardId, status) {\n    return fetch(`${this._url}/${this._groupId}/cards/likes/${cardId}`, {\n      method: status ? \"DELETE\" : \"PUT\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._checkRes);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._url}/${this._groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(avatar)\n    }).then(this._checkRes);\n  }\n\n}\n\nconst api = new Api(apiConfig);\nexport default api;","map":{"version":3,"sources":["/Users/knprcta/Study/dev/mesto-react/src/utils/Api.js"],"names":["apiConfig","Api","constructor","baseUrl","token","groupId","_url","_token","_groupId","_checkRes","res","ok","json","Promise","reject","status","getUserInfo","fetch","headers","authorization","then","getInitialCards","setUserInfo","user","method","body","JSON","stringify","name","about","addCard","card","link","deleteCard","cardId","toogleLike","updateAvatar","avatar","api"],"mappings":"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","sourcesContent":["import { apiConfig } from \"./constants\";\n\nclass Api {\n  constructor({ baseUrl, token, groupId }) {\n    this._url = baseUrl;\n    this._token = token;\n    this._groupId = groupId;\n  }\n\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  setUserInfo(user) {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about,\n      }),\n    }).then(this._checkRes);\n  }\n\n  addCard(card) {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link,\n      }),\n    }).then(this._checkRes);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/${this._groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  toogleLike(cardId, status) {\n    return fetch(`${this._url}/${this._groupId}/cards/likes/${cardId}`, {\n      method: status ? \"DELETE\" : \"PUT\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._url}/${this._groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(avatar),\n    }).then(this._checkRes);\n  }\n}\n\nconst api = new Api(apiConfig);\n\nexport default api;"]},"metadata":{},"sourceType":"module"}