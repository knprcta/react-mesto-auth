{"ast":null,"code":"import _classCallCheck from\"/Users/knprcta/Study/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/knprcta/Study/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass\";import{apiConfig}from\"./constants\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,token=_ref.token,groupId=_ref.groupId;_classCallCheck(this,Api);this._url=baseUrl;this._token=token;this._groupId=groupId;}_createClass(Api,[{key:\"_checkRes\",value:function _checkRes(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/\").concat(this._groupId,\"/users/me\"),{headers:{authorization:this._token}}).then(this._checkRes);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/\").concat(this._groupId,\"/cards\"),{headers:{authorization:this._token}}).then(this._checkRes);}},{key:\"setUserInfo\",value:function setUserInfo(user){return fetch(\"\".concat(this._url,\"/\").concat(this._groupId,\"/users/me\"),{method:\"PATCH\",headers:{authorization:this._token,\"Content-Type\":\"application/json\"},body:JSON.stringify({name:user.name,about:user.about})}).then(this._checkRes);}},{key:\"addCard\",value:function addCard(card){return fetch(\"\".concat(this._url,\"/\").concat(this._groupId,\"/cards\"),{method:\"POST\",headers:{authorization:this._token,\"Content-Type\":\"application/json\"},body:JSON.stringify({name:card.name,link:card.link})}).then(this._checkRes);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/\").concat(this._groupId,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:this._token}}).then(this._checkRes);}},{key:\"toogleLike\",value:function toogleLike(cardId,status){return fetch(\"\".concat(this._url,\"/\").concat(this._groupId,\"/cards/likes/\").concat(cardId),{method:status?\"DELETE\":\"PUT\",headers:{authorization:this._token}}).then(this._checkRes);}},{key:\"updateAvatar\",value:function updateAvatar(avatar){return fetch(\"\".concat(this._url,\"/\").concat(this._groupId,\"/users/me/avatar\"),{method:\"PATCH\",headers:{authorization:this._token,\"Content-Type\":\"application/json\"},body:JSON.stringify(avatar)}).then(this._checkRes);}}]);return Api;}();var api=new Api(apiConfig);export default api;","map":{"version":3,"sources":["/Users/knprcta/Study/dev/mesto-react/src/utils/api.js"],"names":["apiConfig","Api","baseUrl","token","groupId","_url","_token","_groupId","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_checkRes","user","method","body","JSON","stringify","name","about","card","link","cardId","avatar","api"],"mappings":"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","sourcesContent":["import { apiConfig } from \"./constants\";\n\nclass Api {\n  constructor({ baseUrl, token, groupId }) {\n    this._url = baseUrl;\n    this._token = token;\n    this._groupId = groupId;\n  }\n\n  _checkRes(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  setUserInfo(user) {\n    return fetch(`${this._url}/${this._groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about,\n      }),\n    }).then(this._checkRes);\n  }\n\n  addCard(card) {\n    return fetch(`${this._url}/${this._groupId}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link,\n      }),\n    }).then(this._checkRes);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/${this._groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  toogleLike(cardId, status) {\n    return fetch(`${this._url}/${this._groupId}/cards/likes/${cardId}`, {\n      method: status ? \"DELETE\" : \"PUT\",\n      headers: {\n        authorization: this._token,\n      },\n    }).then(this._checkRes);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._url}/${this._groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(avatar),\n    }).then(this._checkRes);\n  }\n}\n\nconst api = new Api(apiConfig);\n\nexport default api;"]},"metadata":{},"sourceType":"module"}